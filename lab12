'''
Вычислить сумму знакопеременного ряда |х*n!|/n!, где х-матрица ранга к (к и матрица задаются случайным образом), n - номер слагаемого.
Сумма считается вычисленной, если точность вычислений будет не меньше t знаков после запятой. У алгоритма д.б. линейная сложность.
Операция умножения –поэлементная. Знак первого слагаемого  +.
'''
import random
import numpy as np
from decimal import Decimal, getcontext


# Определение функции для вычисления суммы знакопеременного ряда
def s_sum(x, t):
    # Задаем основные параметры
    n = 1  # Номер слагаемого
    mat_x = x  # Текущая матрица
    factorial = 1  # Накопляемый факториал
    result = 0  # Переменная результата
    sign = 1 #переменная для смены знака

    # Бесконечный цикл для вычисления ряда
    while True:
        #factorial = math.factorial(n)  # Факториал n
        curr_part = Decimal(np.linalg.det(mat_x)/ factorial)  # Вычисление текущего члена ряда,
        # преобразовывание его в decimal
        #curr_part = Decimal(curr_part / factorial)
        # Проверка на достижение заданной точности t
        if abs(curr_part) < 1 / (10 ** t):
            break
        result += sign * curr_part  # сумма текущего ряда с результатом



        # Смена параметров для следующих вычислений
        n += 1
        sign = -sign
        factorial *= n
        mat_x *= factorial

    return result
try:
    # Ввод значения t
    print("Введите число t (количество знаков после запятой), больше 1:")
    t = int(input())
    #while t > 300 or t < 1:  # ошибка в случае введения слишком малой точности
     #   t = int(input("Вы ввели число, неподходящее по условию, введите число t, большее или равное 1:\n"))

    print()

    #генерация значения k и матрицы x
    k = random.randint(1, 10)
    x = np.random.randint(0, 10, (k, k))

    # Вывод матрицы x
    print("Матрица:")
    print(x)
    print()

    # Установка технической точности вычислений
    getcontext().prec = t + 150

    # Вызов функции s_sum для вычисления суммы ряда с заданной точностью t
    result2 = s_sum(x, t)

    # Вывод результата с заданной точностью
    print(f"Сумма ряда с точностью {t} знаков после запятой: {result2:.{t}f}".rstrip('0').rstrip('.'))

# Ошибка, если введено не числа в качестве t
except ValueError:
    print("\nВведенный символ не является числом. Перезапустите программу и введите число.")
